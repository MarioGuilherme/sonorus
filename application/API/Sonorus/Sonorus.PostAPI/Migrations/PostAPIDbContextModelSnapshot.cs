// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sonorus.PostAPI.Data.Context;

#nullable disable

namespace Sonorus.PostAPI.Migrations
{
    [DbContext(typeof(PostAPIDbContext))]
    partial class PostAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InterestPost", b =>
                {
                    b.Property<long>("InterestsInterestId")
                        .HasColumnType("bigint");

                    b.Property<long>("PostsPostId")
                        .HasColumnType("bigint");

                    b.HasKey("InterestsInterestId", "PostsPostId");

                    b.HasIndex("PostsPostId");

                    b.ToTable("InterestPost");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.Comment", b =>
                {
                    b.Property<long?>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("CommentId"));

                    b.Property<DateTime>("CommentedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 12, 19, 16, 4, 5, DateTimeKind.Local).AddTicks(8085));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.CommentLiker", b =>
                {
                    b.Property<long>("CommentLikerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CommentLikerId"));

                    b.Property<long?>("CommentId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("CommentLikerId");

                    b.HasIndex("CommentId");

                    b.ToTable("CommentLikers");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.Interest", b =>
                {
                    b.Property<long>("InterestId")
                        .HasColumnType("bigint");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.Media", b =>
                {
                    b.Property<long?>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("MediaId"));

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(41)
                        .HasColumnType("nvarchar(41)");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.HasKey("MediaId");

                    b.HasIndex("PostId");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.Post", b =>
                {
                    b.Property<long?>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PostId"));

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("PostedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 12, 19, 16, 4, 5, DateTimeKind.Local).AddTicks(7685));

                    b.Property<string>("Tablature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("PostId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.PostLiker", b =>
                {
                    b.Property<long>("PostLikerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PostLikerId"));

                    b.Property<long?>("PostId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("PostLikerId");

                    b.HasIndex("PostId");

                    b.ToTable("PostLikers");
                });

            modelBuilder.Entity("InterestPost", b =>
                {
                    b.HasOne("Sonorus.PostAPI.Data.Entities.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sonorus.PostAPI.Data.Entities.Post", null)
                        .WithMany()
                        .HasForeignKey("PostsPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.Comment", b =>
                {
                    b.HasOne("Sonorus.PostAPI.Data.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.CommentLiker", b =>
                {
                    b.HasOne("Sonorus.PostAPI.Data.Entities.Comment", null)
                        .WithMany("Likers")
                        .HasForeignKey("CommentId");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.Media", b =>
                {
                    b.HasOne("Sonorus.PostAPI.Data.Entities.Post", "Post")
                        .WithMany("Medias")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.PostLiker", b =>
                {
                    b.HasOne("Sonorus.PostAPI.Data.Entities.Post", null)
                        .WithMany("Likers")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.Comment", b =>
                {
                    b.Navigation("Likers");
                });

            modelBuilder.Entity("Sonorus.PostAPI.Data.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likers");

                    b.Navigation("Medias");
                });
#pragma warning restore 612, 618
        }
    }
}
