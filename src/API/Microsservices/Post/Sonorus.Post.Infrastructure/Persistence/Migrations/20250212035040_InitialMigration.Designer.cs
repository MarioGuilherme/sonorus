// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sonorus.Post.Infrastructure.Persistence;

#nullable disable

namespace Sonorus.Post.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(SonorusPostDbContext))]
    [Migration("20250212035040_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sonorus.Post.Core.Entities.Comment", b =>
                {
                    b.Property<long>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CommentId"));

                    b.Property<DateTime>("CommentedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.CommentLiker", b =>
                {
                    b.Property<long>("CommentId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("CommentId", "UserId");

                    b.ToTable("CommentsLikers", (string)null);
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.Media", b =>
                {
                    b.Property<long>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MediaId"));

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(41)
                        .HasColumnType("nvarchar(41)");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.HasKey("MediaId");

                    b.HasIndex("PostId");

                    b.ToTable("Medias", (string)null);
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.PostInterest", b =>
                {
                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.Property<long>("InterestId")
                        .HasColumnType("bigint");

                    b.HasKey("PostId", "InterestId");

                    b.ToTable("PostsInterests", (string)null);
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.PostLiker", b =>
                {
                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("PostId", "UserId");

                    b.ToTable("PostsLikers", (string)null);
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.Post", b =>
                {
                    b.Property<long>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PostId"));

                    b.Property<string>("Content")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("PostedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Tablature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("PostId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.Comment", b =>
                {
                    b.HasOne("Sonorus.Post.Core.Entities.Post", null)
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.CommentLiker", b =>
                {
                    b.HasOne("Sonorus.Post.Core.Entities.Comment", "Comment")
                        .WithMany("CommentLikers")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.Media", b =>
                {
                    b.HasOne("Sonorus.Post.Core.Entities.Post", null)
                        .WithMany("Medias")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.PostInterest", b =>
                {
                    b.HasOne("Sonorus.Post.Core.Entities.Post", "Post")
                        .WithMany("PostInterests")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.PostLiker", b =>
                {
                    b.HasOne("Sonorus.Post.Core.Entities.Post", "Post")
                        .WithMany("PostLikers")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.Comment", b =>
                {
                    b.Navigation("CommentLikers");
                });

            modelBuilder.Entity("Sonorus.Post.Core.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Medias");

                    b.Navigation("PostInterests");

                    b.Navigation("PostLikers");
                });
#pragma warning restore 612, 618
        }
    }
}
